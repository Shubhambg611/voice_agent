version: '3.8'

services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ../../backend
      dockerfile: ../deployment/docker/Dockerfile.backend
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - FLASK_ENV=production
    depends_on:
      - redis
    networks:
      - backend
      - frontend
    volumes:
      - ../../backend/logs:/app/logs
      - ../../backend/temp:/app/temp

  frontend:
    build:
      context: ../../frontend
      dockerfile: ../deployment/docker/Dockerfile.frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - frontend
    volumes:
      - ../../deployment/nginx/ssl:/etc/nginx/ssl:ro

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  redis_data:
